# Remap prefix from 'C-b' to 'C-a'b
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

set -g mode-keys vi # Vi history keys
set -g history-limit 50000 # Increase scrollback history
set -sg escape-time 0 # Don't wait for ESC
set -g repeat-time 300 # Turn down repeatable timeout
set -g base-index 1 # Start window naming on 1, not 0
set -g mouse on # Enable mouse control (clickable windows, panes, resizable panes)
set -g renumber-windows on # Automatically renumbers windows
set -g focus-events on

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" 

# Update default binding of `Enter` to also use copy-pipe
unbind-key -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" 

# Colors
set -g default-terminal 'xterm-256color'
set -as terminal-overrides ',xterm*:Tc:sitm=\E[3m'

# Statusbar
set -g status-position bottom
set -g status-left ""
set -g status-right '#[fg=#7B7B9E]#(~/.dotfiles/terminal/scripts/current_track.sh) #[fg=#7B7B9E]:: %H:%M '
set -g status-right-length 200
set -g status-left-length 70
set -g status-interval 5
set -g renumber-windows on

# TokyoNight colors for Tmux
set -g mode-style "fg=#7aa2f7,bg=#3b4261"
set -g message-style "fg=#7aa2f7,bg=#3b4261"
set -g message-command-style "fg=#7aa2f7,bg=#3b4261"
set -g pane-border-style "fg=#3b4261"
set -g pane-active-border-style "fg=#75AD39"
set -g status-style "fg=#7aa2f7,bg=#16161e"
setw -g window-status-activity-style "underscore,fg=#a9b1d6,bg=#16161e"
setw -g window-status-style "NONE,fg=#a9b1d6,bg=#16161e"

## Windows
setw -g window-status-current-format '#[fg=#9ece6a] #I #{?window_zoomed_flag,#[fg=cyan](,}#W#{?window_zoomed_flag,),} '
setw -g window-status-format '#[fg=#7B7B9E] #I #{?window_zoomed_flag,#[fg=cyan](,}#W#{?window_zoomed_flag,),} '

# Reset saved window layout
if -F '#{@layout_save}' \
  {set -up @layout_save}

# Use cmd + z to maximize pane size vertically
bind -n M-z if -F '#{@layout_save}' \
    {run 'tmux select-layout "#{@layout_save}" ; set -up @layout_save'} \
    {set -Fp @layout_save "#{window_layout}" ; run 'tmux resize-pane -y 100%'}

# Use cmd + x to maximize pane size horizontally
bind -n M-x if -F '#{@layout_save}' \
    {run 'tmux select-layout "#{@layout_save}" ; set -up @layout_save'} \
    {set -Fp @layout_save "#{window_layout}" ; run 'tmux resize-pane -x 100%'}

# split panes using | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# Resize window to 70%. Nice to use to have a main pane
# and a smaller pane for tests, logs, etc.
bind r resize-pane -x 70%

# navigate windows using hl
bind h select-pane -t :.-
bind l select-pane -t :.+

# navigate panes using jk
bind j select-window -t :-
bind k select-window -t :+

bind % select-layout even-horizontal # Even horizontal split using %
bind a source ~/.dotfiles/.tmux.conf \; display-message "Config reloaded..." # Source

# Create sessions with fuzzy finding
bind f run "tmux neww ~/.dotfiles/terminal/scripts/tmux-sessionizer.sh"

# Open GitHub url of open project
bind g run "~/.dotfiles/terminal/scripts/open-github.sh"
